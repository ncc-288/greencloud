/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/13b07685-030f-4f27-add4-09b7289c88fd 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float ppm;
  CloudTemperatureSensor dHT11_TEMP;
  int photo_res;
  CloudRelativeHumidity dHT11_HUMT;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include <DHT.h>

#define sens_DHT11 0                      // DHT sensor input pin location
#define DHTTYPE DHT11                     // DHT sensor type
DHT dht(sens_DHT11, DHTTYPE);             // DHT object init

int photo_pin = A5;                       // Photoresistor pin
int gas_pin = A3;                         // Gas pin

void readsensor_DHT();                    // DHT11 read
void readsensor_photoresistor();          // Photoresistor read
void readsensor_ppm();                    // PPM sensor

void setup() 
{
  Serial.begin(9600);
  delay(1500);
  
  // Cloud functions
  initProperties();
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
  
  // DHT11 sensor
  dht.begin();
  
  // Photoresistor sensor
  pinMode(A5, INPUT);
  
  // PPM sensor
  pinMode(A3, INPUT);
}

void loop() 
{
  ArduinoCloud.update();
  readsensor_DHT();
  readsensor_photoresistor();
  readsensor_ppm();
  
  delay(1000);
}

void readsensor_DHT()
{
  float h = dht.readHumidity();
  float t = dht.readTemperature(); // or dht.readTemperature(true) for Fahrenheit

  if (isnan(h) || isnan(t)) 
  {
    Serial.println("Failed to read from DHT sensor!");
    return;
  }
  dHT11_TEMP= t;
  dHT11_HUMT = h;

  Serial.print(F("Humidity: "));
  Serial.print(h);
  Serial.print(F("%  Temperature: "));
  Serial.print(t);
  Serial.print(F("Â°C "));
}

void readsensor_photoresistor()
{
  int p = analogRead(photo_pin);
  
  photo_res = p;
  
  Serial.print(F("Photoresistor: "));
  Serial.print(p);
}

void readsensor_ppm()
{
  int sensor_value = analogRead(gas_pin);                 // Read the sensor value
  float voltage = sensor_value * (5.0 / 1023.0);          // Convert the sensor value to voltage
  ppm = (voltage - 0.1) * 100 / 0.8;                      // Convert the voltage to ppm
  
  Serial.print(F(" PPM: "));
  Serial.print(ppm);
  Serial.println();
}
